program ::= statement-list

statement-list ::= statement
                | statement statement-list

statement ::= expression-statement
			| compound-statement
			| selection-statement
			| iteration-statement
            | print-statement
			| declaration

declaration ::= type-specifier identifier '=' constant-expression ';'

type-specifier ::= 'CHAR'
				 | 'INT'

expression-statement ::= constant-expression ';'

constant-expression ::= assignment-expression

assignment-expression ::= logical-or-expression
                        | assignment-expression assignment-operator logical-or-expression 

logical-or-expression ::= logical-and-expression
                          | logical-or-expression '||' logical-and-expression

logical-and-expression ::= inclusive-or-expression
                           | logical-and-expression '&&' inclusive-or-expression

inclusive-or-expression ::= exclusive-or-expression
                            | inclusive-or-expression '|' exclusive-or-expression

exclusive-or-expression ::= and-expression
                            | exclusive-or-expression '^' and-expression

and-expression ::= equality-expression
                   | and-expression '&' equality-expression

equality-expression ::= relational-expression
                        | equality-expression '==' relational-expression
                        | equality-expression '!=' relational-expression

relational-expression ::= shift-expression
                          | relational-expression '<' shift-expression
                          | relational-expression '>' shift-expression
                          | relational-expression '<=' shift-expression
                          | relational-expression '>=' shift-expression

shift-expression ::= additive-expression
                     | shift-expression '<<' additive-expression
                     | shift-expression '>>' additive-expression

additive-expression ::= multiplicative-expression
                        | additive-expression '+' multiplicative-expression
                        | additive-expression '-' multiplicative-expression

multiplicative-expression ::= primary-expression
                              | multiplicative-expression '*' primary-expression
                              | multiplicative-expression '/' primary-expression
                              | multiplicative-expression '%' primary-expression

primary-expression ::= identifier
                       | constant
                       | string
                       | '(' expression ')'

expression ::= constant-expression 
             | expression ',' constant-expression

assignment-operator ::= '='

unary-operator ::=   '+'
                   | '-'
                   | '~'
                   | '!'

compound-statement ::= '{' statement-list '}'

selection-statement ::= 'IF' '(' constant-expression ')' compound_statement
						| 'IF' '(' constant-expression ')' compound_statement 'ELSE' compound_statement

iteration-statement ::= 'WHILE' '(' constant-expression ')' compound_statement

print-statement ::= 'PRINT' '(' identifier ')' ';'
                  | 'PRINT' '(' constant ')' ';'



